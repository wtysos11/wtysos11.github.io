<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>计算机/计算机组成 on 实践出真知</title>
    <link>http://wtysos11.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/</link>
    <description>Recent content in 计算机/计算机组成 on 实践出真知</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <atom:link href="http://wtysos11.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>计算机组成-概述</title>
      <link>http://wtysos11.github.io/posts/20210309_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Tue, 09 Mar 2021 14:26:14 +0800</pubDate>
      <guid>http://wtysos11.github.io/posts/20210309_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E6%A6%82%E8%BF%B0/</guid>
      <description>第1章 计算机系统概述 Link to heading 冯诺依曼结构：运算器、控制器、存储器、输入设备和输出设备五大部件组成。现代计算机一般把控制器和运算器集成在一个芯片上，合称为中央处理器。 现代计算机一般以存储器为中心，使I/O操作尽可能绕过CPU，直接在I/O设备与存储器间完成，从而提高系统的整体运行效率。&#xA;重要设备：&#xA;地址寄存器MAR：存放访存地址，经过地址译码后可以找到所选的存储单元。 数据寄存器MDR：是主存和其他部件的中介机构，用于暂存要从存储器中读或写的信息，失序控制逻辑用于产生存储器操作所需的各种时序信号。位数和存储字长相等。 MAR和MDR虽然是存储器的一部分，但是确实在现代CPU内的。&#xA;运算器：核心是ALUM，包含若干通用寄存器用于暂存操作数和中间结果。另外还有程序状态寄存器PSW，用来保留各类运算指令或测试指令的结果的各类状态信息，以表征系统运行状态。 控制器：由程序计数器PC、指令寄存器IR、控制单元CU组成。PC存放当前欲执行指令的地址。IR用来存放当前的指令，内容来自于主存的MDR。 CPU和主存储器构成主机，计算机中除去主机的其他硬件设备统称为外部设备。&#xA;系统软件：保证计算机系统高效、正确运行的基础软件，包括操作系统、数据库管理系统、语言处理程序、分布式软件系统、网络软件系统、标准库程序、服务性程序。 应用软件：用户为解决某个应用领域中的各类问题而编制的程序。 PS：DBMS和DBS是有区别的。DBMS是系统软件，而DBS是引入DBMS后的系统。&#xA;信息流程：&#xA;取指令：PC-&amp;gt;MAR-&amp;gt;M-&amp;gt;MDR-&amp;gt;IR 分析指令：OP(IR)-&amp;gt;CU 执行指令：Ad(IR)-&amp;gt;MAR-&amp;gt;M-&amp;gt;MDR-&amp;gt;ACC 1.2.5 计算机系统的多级层次结果 Link to heading 微程序机器层。硬件层，由机器硬件直接执行微指令。 传统机器语言层。机器层，由微程序解释机器指令系统。 操作系统层。由操作系统定义和解释软件指令，作为广义指令。以及机器指令组成。 汇编语言层。 高级语言层。 应用层。 层次之间，下层是上层的基础，上层是下层的扩展。&#xA;1.3 计算机的性能指标 Link to heading 机器字长：计算机进行一次整数运算所能处理的二进制数据的位数。 数据通路带宽：数据总线一次能并行传送信息的位数 贮存容量：主存储器所能存储信息的最大容量。MAR的位数反应了存储单元的个数，MDR的位数反应了可寻址范围的最大值。 吞吐量：系统在单位时间内处理请求的数目。 CPU时钟周期：CPU中最小的时间单位，每个动作至少需要一个时钟周期。 CPU时钟主频：CPU时钟周期的倒数。主频越高，完成指令的一个执行步骤所需要的时间越短。 CPI：指执行一条指令所需的时钟周期数 CPU执行时间= CPU周期数/主频=（指令条数*CPI）/主频 MIPS(million instructions per second)：每秒执行多少百万条指令。有MIPS=指令条数/(执行时间*10^6)=主频/CPI&#xA;MFLOPS，每秒执行多少百万次浮点运算，重要的性能判断标志。&#xA;平均指令周期 = 1/MIPS 平均每条指令的时钟周期数(CPI)=平均指令周期/CPU时钟周期=1/(MIPS*主频) 题目 17.C 解析：基准程序的CPI=2*0.5+3*0.2+4*0.1+5*0.2=3。计算机的主频为1.2GHz，即1200MHz，故该机器的MIPS=1200/3=400 18.D 解析：程序A的运行时间为100秒，除去CPU时间90秒，剩下10秒为I/O时间。CPU提速后运行基准程序A所耗费的时间T=90/1.5+10秒 19.D 解析：假设原来指令条数为x，那么原CPI就为20*f/x（注：f为CPU的时钟频率），经过编译优化后，指令条数减少到原来的70%，即指令条数为0.7x，而CPI增加到原来的1.2倍，即24*f/x，那么现在P在M上的执行时间就为：（指令条数*CPI）/f=(0.7x*24*f/x)/f=16.8秒 20.C 运行时间=指令数*CPI/主频。M1的时间=指令数*21.5，M2的时间=指令数*1/1.2，两者之比为(2/1.5):(1/1.2)=1.6&#xA;透明性：在计算机领域中，站在某一类用户的角度，如果感觉不到某个事物或属性的存在，则称“对该用户而言，某个事物或属性是透明的”。这与日常生活中透明的概念刚好相反。&#xA;例如，对于高级语言程序员而言，浮点数格式、乘法指令等这些语言的格式、数据如何在运算器中运算都是透明的；而对于机器语言或汇编语言程序员来说，指令的格式、机器结构、数据格式等则不是透明的。&#xA;码距：任意两个合法码字之间最少变化的二进制位数，称为数据校验码的码距。&#xA;奇偶校验，最高位为校验位，剩下的是信息位</description>
    </item>
    <item>
      <title>计算机组成-概述</title>
      <link>http://wtysos11.github.io/posts/20210309_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Tue, 09 Mar 2021 14:26:14 +0800</pubDate>
      <guid>http://wtysos11.github.io/posts/20210309_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E6%A6%82%E8%BF%B0/</guid>
      <description>第1章 计算机系统概述 Link to heading 冯诺依曼结构：运算器、控制器、存储器、输入设备和输出设备五大部件组成。现代计算机一般把控制器和运算器集成在一个芯片上，合称为中央处理器。 现代计算机一般以存储器为中心，使I/O操作尽可能绕过CPU，直接在I/O设备与存储器间完成，从而提高系统的整体运行效率。&#xA;重要设备：&#xA;地址寄存器MAR：存放访存地址，经过地址译码后可以找到所选的存储单元。 数据寄存器MDR：是主存和其他部件的中介机构，用于暂存要从存储器中读或写的信息，失序控制逻辑用于产生存储器操作所需的各种时序信号。位数和存储字长相等。 MAR和MDR虽然是存储器的一部分，但是确实在现代CPU内的。&#xA;运算器：核心是ALUM，包含若干通用寄存器用于暂存操作数和中间结果。另外还有程序状态寄存器PSW，用来保留各类运算指令或测试指令的结果的各类状态信息，以表征系统运行状态。 控制器：由程序计数器PC、指令寄存器IR、控制单元CU组成。PC存放当前欲执行指令的地址。IR用来存放当前的指令，内容来自于主存的MDR。 CPU和主存储器构成主机，计算机中除去主机的其他硬件设备统称为外部设备。&#xA;系统软件：保证计算机系统高效、正确运行的基础软件，包括操作系统、数据库管理系统、语言处理程序、分布式软件系统、网络软件系统、标准库程序、服务性程序。 应用软件：用户为解决某个应用领域中的各类问题而编制的程序。 PS：DBMS和DBS是有区别的。DBMS是系统软件，而DBS是引入DBMS后的系统。&#xA;信息流程：&#xA;取指令：PC-&amp;gt;MAR-&amp;gt;M-&amp;gt;MDR-&amp;gt;IR 分析指令：OP(IR)-&amp;gt;CU 执行指令：Ad(IR)-&amp;gt;MAR-&amp;gt;M-&amp;gt;MDR-&amp;gt;ACC 1.2.5 计算机系统的多级层次结果 Link to heading 微程序机器层。硬件层，由机器硬件直接执行微指令。 传统机器语言层。机器层，由微程序解释机器指令系统。 操作系统层。由操作系统定义和解释软件指令，作为广义指令。以及机器指令组成。 汇编语言层。 高级语言层。 应用层。 层次之间，下层是上层的基础，上层是下层的扩展。&#xA;1.3 计算机的性能指标 Link to heading 机器字长：计算机进行一次整数运算所能处理的二进制数据的位数。 数据通路带宽：数据总线一次能并行传送信息的位数 贮存容量：主存储器所能存储信息的最大容量。MAR的位数反应了存储单元的个数，MDR的位数反应了可寻址范围的最大值。 吞吐量：系统在单位时间内处理请求的数目。 CPU时钟周期：CPU中最小的时间单位，每个动作至少需要一个时钟周期。 CPU时钟主频：CPU时钟周期的倒数。主频越高，完成指令的一个执行步骤所需要的时间越短。 CPI：指执行一条指令所需的时钟周期数 CPU执行时间= CPU周期数/主频=（指令条数*CPI）/主频 MIPS(million instructions per second)：每秒执行多少百万条指令。有MIPS=指令条数/(执行时间*10^6)=主频/CPI&#xA;MFLOPS，每秒执行多少百万次浮点运算，重要的性能判断标志。&#xA;平均指令周期 = 1/MIPS 平均每条指令的时钟周期数(CPI)=平均指令周期/CPU时钟周期=1/(MIPS*主频) 题目 17.C 解析：基准程序的CPI=2*0.5+3*0.2+4*0.1+5*0.2=3。计算机的主频为1.2GHz，即1200MHz，故该机器的MIPS=1200/3=400 18.D 解析：程序A的运行时间为100秒，除去CPU时间90秒，剩下10秒为I/O时间。CPU提速后运行基准程序A所耗费的时间T=90/1.5+10秒 19.D 解析：假设原来指令条数为x，那么原CPI就为20*f/x（注：f为CPU的时钟频率），经过编译优化后，指令条数减少到原来的70%，即指令条数为0.7x，而CPI增加到原来的1.2倍，即24*f/x，那么现在P在M上的执行时间就为：（指令条数*CPI）/f=(0.7x*24*f/x)/f=16.8秒 20.C 运行时间=指令数*CPI/主频。M1的时间=指令数*21.5，M2的时间=指令数*1/1.2，两者之比为(2/1.5):(1/1.2)=1.6&#xA;透明性：在计算机领域中，站在某一类用户的角度，如果感觉不到某个事物或属性的存在，则称“对该用户而言，某个事物或属性是透明的”。这与日常生活中透明的概念刚好相反。&#xA;例如，对于高级语言程序员而言，浮点数格式、乘法指令等这些语言的格式、数据如何在运算器中运算都是透明的；而对于机器语言或汇编语言程序员来说，指令的格式、机器结构、数据格式等则不是透明的。&#xA;码距：任意两个合法码字之间最少变化的二进制位数，称为数据校验码的码距。&#xA;奇偶校验，最高位为校验位，剩下的是信息位</description>
    </item>
  </channel>
</rss>
