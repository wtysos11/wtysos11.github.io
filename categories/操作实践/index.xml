<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>操作实践 on 实践出真知</title>
    <link>http://wtysos11.github.io/categories/%E6%93%8D%E4%BD%9C%E5%AE%9E%E8%B7%B5/</link>
    <description>Recent content in 操作实践 on 实践出真知</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Thu, 07 Apr 2022 16:41:07 +0800</lastBuildDate>
    <atom:link href="http://wtysos11.github.io/categories/%E6%93%8D%E4%BD%9C%E5%AE%9E%E8%B7%B5/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Wikipedia pageview数据获取(bigquery)</title>
      <link>http://wtysos11.github.io/posts/20220407_wikipedia_pageview%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Thu, 07 Apr 2022 16:41:07 +0800</pubDate>
      <guid>http://wtysos11.github.io/posts/20220407_wikipedia_pageview%E6%95%B0%E6%8D%AE/</guid>
      <description>维基百科pageview数据集原始数据获取，可以从bigquery上获得2015年以来的小时级访问数据</description>
    </item>
    <item>
      <title>istio应用对外访问极速入门</title>
      <link>http://wtysos11.github.io/posts/20211030_istio%E5%BA%94%E7%94%A8%E5%AF%B9%E5%A4%96%E8%AE%BF%E9%97%AE%E6%9E%81%E9%80%9F%E5%85%A5%E9%97%A8/</link>
      <pubDate>Sat, 30 Oct 2021 16:41:02 +0800</pubDate>
      <guid>http://wtysos11.github.io/posts/20211030_istio%E5%BA%94%E7%94%A8%E5%AF%B9%E5%A4%96%E8%AE%BF%E9%97%AE%E6%9E%81%E9%80%9F%E5%85%A5%E9%97%A8/</guid>
      <description>istio框架下如何暴露服务，其实挺简单的。</description>
    </item>
    <item>
      <title>kubernetes服务：学习ingress与暴露服务简单实验</title>
      <link>http://wtysos11.github.io/posts/20210606_kubernetes%E6%9C%8D%E5%8A%A1_%E5%AD%A6%E4%B9%A0ingress%E4%B8%8E%E6%9A%B4%E9%9C%B2%E6%9C%8D%E5%8A%A1%E7%AE%80%E5%8D%95%E5%AE%9E%E9%AA%8C/</link>
      <pubDate>Sun, 06 Jun 2021 16:30:14 +0800</pubDate>
      <guid>http://wtysos11.github.io/posts/20210606_kubernetes%E6%9C%8D%E5%8A%A1_%E5%AD%A6%E4%B9%A0ingress%E4%B8%8E%E6%9A%B4%E9%9C%B2%E6%9C%8D%E5%8A%A1%E7%AE%80%E5%8D%95%E5%AE%9E%E9%AA%8C/</guid>
      <description>参考资料：&#xA;kubernetes ingress实战 Intro to Kube ingress: Set up nginx Ingress in Kubernetes Bare Metal ingress的nip.io相关资料 实验室集群中已经有一个ingress-controller，ingress.class为nginx。 本次实验的目标是将服务通过ingress暴露到外部服务，最好能够直接通过外网IP访问。&#xA;实验所需镜像 Link to heading 原本用的是google的镜像，但是因为在国内，弄起来太麻烦了。所以还是从dockerhub上选了一个类似的镜像。&#xA;apiVersion: v1 kind: Namespace metadata: name: echoserver --- apiVersion: apps/v1 kind: Deployment metadata: name: echoserver namespace: echoserver spec: replicas: 2 selector: matchLabels: app: echoserver template: metadata: labels: app: echoserver spec: containers: - image: ealen/echo-server:latest imagePullPolicy: IfNotPresent name: echoserver ports: - containerPort: 80 env: - name: PORT value: &amp;#34;80&amp;#34; --- apiVersion: v1 kind: Service metadata: name: echoserver namespace: echoserver spec: ports: - port: 80 targetPort: 80 protocol: TCP type: ClusterIP selector: app: echoserver --- apiVersion: networking.</description>
    </item>
    <item>
      <title>Vagrant如何手动下载官网镜像并导入</title>
      <link>http://wtysos11.github.io/posts/20210603_vagrant%E5%A6%82%E4%BD%95%E6%89%8B%E5%8A%A8%E4%B8%8B%E8%BD%BD%E5%AE%98%E7%BD%91%E9%95%9C%E5%83%8F%E5%B9%B6%E5%AF%BC%E5%85%A5/</link>
      <pubDate>Thu, 03 Jun 2021 09:36:14 +0800</pubDate>
      <guid>http://wtysos11.github.io/posts/20210603_vagrant%E5%A6%82%E4%BD%95%E6%89%8B%E5%8A%A8%E4%B8%8B%E8%BD%BD%E5%AE%98%E7%BD%91%E9%95%9C%E5%83%8F%E5%B9%B6%E5%AF%BC%E5%85%A5/</guid>
      <description>参考：&#xA;手工下载和导入vagrant镜像 How to add a downloaded .box file to Vagrant? 由于国内网络的问题，下载Vagrant镜像非常的困难。明明我已经开了全局代理并且curl到了vagrantcloud，但是就是拉不下来镜像……无奈之下只能自力更生，直接搜索然后下载，比如这个RancherOS。我所进行的实验是Vagrant快速部署k8s，因为实验室服务器不够了，没有抵挡地住诱惑。&#xA;或者也可以查看使用vagrant up获得的信息（如下），其中URL即为下载地址。&#xA;Bringing machine &amp;#39;server-01&amp;#39; up with &amp;#39;virtualbox&amp;#39; provider... Bringing machine &amp;#39;node-01&amp;#39; up with &amp;#39;virtualbox&amp;#39; provider... Bringing machine &amp;#39;node-02&amp;#39; up with &amp;#39;virtualbox&amp;#39; provider... ==&amp;gt; server-01: Box &amp;#39;chrisurwin/RancherOS&amp;#39; could not be found. Attempting to find and install... server-01: Box Provider: virtualbox server-01: Box Version: 1.5.1 ==&amp;gt; server-01: Loading metadata for box &amp;#39;chrisurwin/RancherOS&amp;#39; server-01: URL: https://vagrantcloud.com/chrisurwin/RancherOS ==&amp;gt; server-01: Adding box &amp;#39;chrisurwin/RancherOS&amp;#39; (v1.</description>
    </item>
    <item>
      <title>kubernetes虚拟机多级环境部署与Istio的安装</title>
      <link>http://wtysos11.github.io/posts/20201013_kubernetes%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%A4%9A%E7%BA%A7%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2%E4%B8%8Eistio%E7%9A%84%E5%AE%89%E8%A3%85/</link>
      <pubDate>Tue, 13 Oct 2020 12:37:13 +0800</pubDate>
      <guid>http://wtysos11.github.io/posts/20201013_kubernetes%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%A4%9A%E7%BA%A7%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2%E4%B8%8Eistio%E7%9A%84%E5%AE%89%E8%A3%85/</guid>
      <description>后续更新，不一定会记得更新&#xA;kubernetes虚拟机多级环境部署与Istio的安装 Link to heading 标签：项目实践 kubernetes istio&#xA;计划在三台2C4G的机器上安装kubernetes。其中master和slave的系统均为Ubuntu18.04桌面版。（原本想用CentOS的，下载的时候就是这样了，费事改了）&#xA;目前需要在实验室的服务器上进行部署，得了，最终结果也是一样的。&#xA;分为以下几个步骤：&#xA;安装基本软件 访问谷歌镜像仓库gcr.io 完成三台机器关于安装kubeadm的相关工作 安装Istio 部署相关应用（prometheus、grafana） 参考文献：&#xA;掘金 cnblog，这一篇是我后来看到的，写的更好一些。 安装基本软件 Link to heading 如果使用包管理软件，请务必检查自身的包管理软件为最新。&#xA;以Ubuntu的apt为例，首先请务必使用最新的镜像仓库（最好手动弄一下），然后再执行一遍sudo apt-get update来更新。&#xA;配置docker Link to heading 略&#xA;配置kubectl、kubeadm、kubelet Link to heading 在执行命令之前，请首先使用检查是否能够访问到指定的包。以apt为例，使用apt-cache policy &amp;lt;package&amp;gt;可以检查远程仓库中包的版本。&#xA;apt-get install kubectl kubeadm kubelet 系统配置 Link to heading 关闭防火墙 关闭SELinux 关闭swap 下载kubeadm所需镜像 Link to heading 从阿里云下载 Link to heading 首先使用kubeadm config images list列出kubeadm所需要的所有镜像&#xA;k8s.gcr.io/kube-apiserver:v1.19.2 k8s.gcr.io/kube-controller-manager:v1.19.2 k8s.gcr.io/kube-scheduler:v1.19.2 k8s.gcr.io/kube-proxy:v1.19.2 k8s.gcr.io/pause:3.2 k8s.gcr.io/etcd:3.4.13-0 k8s.gcr.io/coredns:1.7.0 即所有的系统镜像为v1.</description>
    </item>
    <item>
      <title>在k8s中上线gatling镜像并在内网发送流量</title>
      <link>http://wtysos11.github.io/posts/20201012_kubernetes%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%A4%9A%E7%BA%A7%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2%E4%B8%8Eistio%E7%9A%84%E5%AE%89%E8%A3%85/</link>
      <pubDate>Mon, 12 Oct 2020 15:44:17 +0800</pubDate>
      <guid>http://wtysos11.github.io/posts/20201012_kubernetes%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%A4%9A%E7%BA%A7%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2%E4%B8%8Eistio%E7%9A%84%E5%AE%89%E8%A3%85/</guid>
      <description>后续更新，我不一定会记得更新过来。&#xA;在k8s中上线gatling镜像并在内网发送流量 Link to heading 很多时候我们会面临一个问题，即外网的带宽是有限的，虽然未来有扩容的可能，但是短时间内也不能直接扩容，而测试本身是无限的。因此，如果不能够在内网下直接发包进行测试，那由于带宽限制打不到较大的压力，对于一些容器的测试很可能就达不到效果。&#xA;因此我们需要在内网有一个能够配置的压力测试容器，目前选定了gatling，因为其功能比较强大，而且安装很方便。&#xA;镜像构造 Link to heading 初始镜像构造 Link to heading 虽然之前已经做了ubuntu的镜像，并且可以使用apt-get install来安装gatling，但是这种方式安装后有些不太会用，似乎更多是作为一个插件存在而不是独立存在的软件。&#xA;我还是选择了自己最熟悉的方式，直接从官网上下载了开源版本的standalone gatling.zip，解压后将目录重命名为gatling，Dockerfile如下:&#xA;FROM ubuntu:18.04 MAINTAINER wtysos11 &amp;#34;wtysos11@gmail.com&amp;#34; COPY sources.list ./ ADD gatling ./gatling RUN rm /etc/apt/sources.list\ &amp;amp;&amp;amp; mv sources.list /etc/apt/sources.list\ &amp;amp;&amp;amp; apt-get update \ &amp;amp;&amp;amp; apt-get install -y openjdk-8-jdk scala #&amp;amp;&amp;amp; apt-get install -y gatling CMD [&amp;#34;/bin/bash&amp;#34;] sources.list为清华的apt镜像，为了加速；gatling可以在java8下运行，必须要安装scala（其实我个人觉得只安装scala就够了，保险起见）&#xA;操作完之后执行docker build . -t ubuntu-wtynettest:0.0.2构造镜像，然后执行docker run --name test -d ubuntu-wtynettest:0.0.2 sleep infinity。再使用docker exec -it test bash</description>
    </item>
  </channel>
</rss>
