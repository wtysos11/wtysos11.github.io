<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>实践出真知</title>
        <link>http://wtysos11.github.io/</link>
        <description>后端技术博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>wtysos11@163.com (Timothy Wu)</managingEditor>
            <webMaster>wtysos11@163.com (Timothy Wu)</webMaster><lastBuildDate>Wed, 15 Jun 2022 14:40:05 &#43;0800</lastBuildDate>
            <atom:link href="http://wtysos11.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>置顶：博客文章组织，目录与标签</title>
    <link>http://wtysos11.github.io/posts/%E7%BD%AE%E9%A1%B6/</link>
    <pubDate>Wed, 06 Apr 2022 12:34:02 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://wtysos11.github.io/posts/%E7%BD%AE%E9%A1%B6/</guid>
    <description><![CDATA[介绍本博客的文章是如何组织的，以及对应的标签和目录的意思介绍]]></description>
</item><item>
    <title>多协程写同一个slice的最佳实践</title>
    <link>http://wtysos11.github.io/posts/20220615_%E5%A4%9A%E5%8D%8F%E7%A8%8B%E5%86%99%E5%90%8C%E4%B8%80%E4%B8%AAslice%E7%9A%84%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</link>
    <pubDate>Wed, 15 Jun 2022 14:40:05 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://wtysos11.github.io/posts/20220615_%E5%A4%9A%E5%8D%8F%E7%A8%8B%E5%86%99%E5%90%8C%E4%B8%80%E4%B8%AAslice%E7%9A%84%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</guid>
    <description><![CDATA[问题描述 main.go func main() { fmt.Println(&#34;in waitgroup test&#34;) result := make([]int, 0) var wg sync.WaitGroup for i := 0; i &lt; 1000; i++ { wg.Add(1) go func() { defer wg.Done() for j := 0; j &lt; 100000; j++ { result = append(result, j) } }() } wg.Wait() fmt.Println(len(result)) } 测试命令为go run -race main.go，会]]></description>
</item><item>
    <title>多协程错误处理与errgroup</title>
    <link>http://wtysos11.github.io/posts/20220615_%E5%A4%9A%E5%8D%8F%E7%A8%8B%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86%E4%B8%8Eerrgroup/</link>
    <pubDate>Wed, 15 Jun 2022 14:17:05 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://wtysos11.github.io/posts/20220615_%E5%A4%9A%E5%8D%8F%E7%A8%8B%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86%E4%B8%8Eerrgroup/</guid>
    <description><![CDATA[工作中碰上的对多个goroutine中错误处理的需要，以及之后发现的对于errgroup的学习]]></description>
</item><item>
    <title>Git常见操作与QA</title>
    <link>http://wtysos11.github.io/posts/20220615_git%E6%93%8D%E4%BD%9Cqa/</link>
    <pubDate>Wed, 15 Jun 2022 08:43:05 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://wtysos11.github.io/posts/20220615_git%E6%93%8D%E4%BD%9Cqa/</guid>
    <description><![CDATA[操作QA 操作与对应的实践练习 git update-index 比如对于本仓库的.env文件，就使用了git update-index --skip-worktree .env来避免]]></description>
</item><item>
    <title>由多个goroutine中获取第一个错误信息出发的CAS学习</title>
    <link>http://wtysos11.github.io/posts/20220615_go%E4%B8%AD%E7%9A%84%E5%8E%9F%E5%AD%90%E6%93%8D%E4%BD%9C%E5%AE%9E%E8%B7%B5_cas/</link>
    <pubDate>Wed, 15 Jun 2022 08:43:05 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://wtysos11.github.io/posts/20220615_go%E4%B8%AD%E7%9A%84%E5%8E%9F%E5%AD%90%E6%93%8D%E4%BD%9C%E5%AE%9E%E8%B7%B5_cas/</guid>
    <description><![CDATA[主要关注Go atomic包中所实现的CAS操作，如何实现以及何时使用]]></description>
</item><item>
    <title>Go语言并发常见问题：A-Study-of-Real-World-Data-Races-in-Golang</title>
    <link>http://wtysos11.github.io/posts/20220613_go%E8%AF%AD%E8%A8%80%E5%B9%B6%E5%8F%91%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</link>
    <pubDate>Mon, 13 Jun 2022 09:01:42 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://wtysos11.github.io/posts/20220613_go%E8%AF%AD%E8%A8%80%E5%B9%B6%E5%8F%91%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</guid>
    <description><![CDATA[前言 参考资料 鸟窝，主要是看到这篇文章后发现了Uber的A Study of Real-World Data Races in Golang。 本文在论文阅读的基础上加了很多可执行的例子，这些例子使用g]]></description>
</item><item>
    <title>腾讯云 cos Go SDK使用学习</title>
    <link>http://wtysos11.github.io/posts/20220613_%E8%85%BE%E8%AE%AF%E4%BA%91cos-go-sdk%E4%BD%BF%E7%94%A8%E5%AD%A6%E4%B9%A0/</link>
    <pubDate>Mon, 13 Jun 2022 09:01:42 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://wtysos11.github.io/posts/20220613_%E8%85%BE%E8%AE%AF%E4%BA%91cos-go-sdk%E4%BD%BF%E7%94%A8%E5%AD%A6%E4%B9%A0/</guid>
    <description><![CDATA[参考资料 官方文档 官方示例 基本概念 Bucket（存储桶） 命名上，由存储桶名称（BucketName）和APPID两部分组成，中间以&quot;]]></description>
</item><item>
    <title>消息队列基本概念与pulsar学习</title>
    <link>http://wtysos11.github.io/posts/20220608_pulsar%E4%B8%8E%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E5%AD%A6%E4%B9%A0/</link>
    <pubDate>Wed, 08 Jun 2022 09:01:42 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://wtysos11.github.io/posts/20220608_pulsar%E4%B8%8E%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E5%AD%A6%E4%B9%A0/</guid>
    <description><![CDATA[消息队列学习 概念学习 参考资料： IBM Messages and queues Microsoft-MSMQ Overview KM-消息队列原理简介与对比选型 基础概念 消息（messages）：一组信息的集合 topic。 Top]]></description>
</item><item>
    <title>Go基本库阅读：bufio库</title>
    <link>http://wtysos11.github.io/posts/20220422_go%E5%9F%BA%E6%9C%AC%E5%BA%93%E9%98%85%E8%AF%BB_bufio/</link>
    <pubDate>Fri, 22 Apr 2022 12:50:02 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://wtysos11.github.io/posts/20220422_go%E5%9F%BA%E6%9C%AC%E5%BA%93%E9%98%85%E8%AF%BB_bufio/</guid>
    <description><![CDATA[bufio 这个库是io库的实现，如果需要自行实现io库可以看一下这个库中Read和Write相关函数的实现。 本质上相当于io加上缓冲区。 参考： 1.4 bu]]></description>
</item><item>
    <title>Go基本库阅读：io库</title>
    <link>http://wtysos11.github.io/posts/20220422_go%E5%9F%BA%E6%9C%AC%E5%BA%93%E9%98%85%E8%AF%BB_io/</link>
    <pubDate>Fri, 22 Apr 2022 12:50:02 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://wtysos11.github.io/posts/20220422_go%E5%9F%BA%E6%9C%AC%E5%BA%93%E9%98%85%E8%AF%BB_io/</guid>
    <description><![CDATA[io相关库 阅读标准库是我大一学haskell时养成的习惯，通过阅读标准库能够更好地掌握语言设计者认为这个语言应该如何使用，从而少走一些弯路。]]></description>
</item></channel>
</rss>
