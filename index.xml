<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>实践出真知</title>
        <link>http://wtysos11.github.io/</link>
        <description>实践出真知</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>wtysos11@163.com (Carlo Wu)</managingEditor>
            <webMaster>wtysos11@163.com (Carlo Wu)</webMaster><lastBuildDate>Fri, 12 Mar 2021 09:56:14 &#43;0800</lastBuildDate>
            <atom:link href="http://wtysos11.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>C&#43;&#43;复现基础排序算法</title>
    <link>http://wtysos11.github.io/posts/20210312_c&#43;&#43;%E5%A4%8D%E7%8E%B0%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</link>
    <pubDate>Fri, 12 Mar 2021 09:56:14 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://wtysos11.github.io/posts/20210312_c&#43;&#43;%E5%A4%8D%E7%8E%B0%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</guid>
    <description><![CDATA[复习一下基本的排序算法 快速排序 时间复杂度O(nlogn)，不稳定 这个写法是我刻在DNA里的，应该没什么大问题，除了比较抽象之外都还好。 #include &lt;string&gt;#include &lt;vector&gt;#include]]></description>
</item><item>
    <title>【动态规划】最长公共子串问题</title>
    <link>http://wtysos11.github.io/posts/20210311_%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E4%B8%B2%E9%97%AE%E9%A2%98/</link>
    <pubDate>Thu, 11 Mar 2021 16:40:14 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://wtysos11.github.io/posts/20210311_%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E4%B8%B2%E9%97%AE%E9%A2%98/</guid>
    <description><![CDATA[题目来源为：牛客网 题目有意思的地方在于，最长公共子串与最长连续公共子串都是比较经典的问题，但是这道题在其基础上加了限制。 首先这道题应该是最长]]></description>
</item><item>
    <title>KMP算法复习</title>
    <link>http://wtysos11.github.io/posts/20210311_kmp%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0/</link>
    <pubDate>Thu, 11 Mar 2021 15:09:14 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://wtysos11.github.io/posts/20210311_kmp%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0/</guid>
    <description><![CDATA[太久没打了，刚好有道题用上了，就复习一下。 我觉得复到KMP应该就够用了，如果要AC自动机我直接死在那里。 参考资料 如何更好地理解和掌握 KMP 算法?]]></description>
</item><item>
    <title>分布式系统-CAP理论十二年回顾：规则变了</title>
    <link>http://wtysos11.github.io/posts/20210310_cap%E7%90%86%E8%AE%BA%E5%8D%81%E4%BA%8C%E5%B9%B4%E5%9B%9E%E9%A1%BE_%E8%A7%84%E5%88%99%E5%8F%98%E4%BA%86/</link>
    <pubDate>Wed, 10 Mar 2021 14:21:14 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://wtysos11.github.io/posts/20210310_cap%E7%90%86%E8%AE%BA%E5%8D%81%E4%BA%8C%E5%B9%B4%E5%9B%9E%E9%A1%BE_%E8%A7%84%E5%88%99%E5%8F%98%E4%BA%86/</guid>
    <description><![CDATA[该文的阅读感想 CAP理论断言，最多只能满足数据一致性、可用性、分区容忍性这三要素中的两个。 REF: What is CAP 数据一致性（consistency）：所有]]></description>
</item><item>
    <title>微信面试算法题-最长拼接子序列</title>
    <link>http://wtysos11.github.io/posts/20210310_%E6%9C%80%E9%95%BF%E6%8B%BC%E6%8E%A5%E5%AD%90%E5%BA%8F%E5%88%97/</link>
    <pubDate>Wed, 10 Mar 2021 14:21:14 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://wtysos11.github.io/posts/20210310_%E6%9C%80%E9%95%BF%E6%8B%BC%E6%8E%A5%E5%AD%90%E5%BA%8F%E5%88%97/</guid>
    <description><![CDATA[面的微信部门，应用研发岗实习一面。我人都傻了，我填的不都是java研发之类的，怎么冒出个这么奇怪的岗位。 题目是这样子的：对于一个给定的子序列]]></description>
</item><item>
    <title>计算机网络-概述</title>
    <link>http://wtysos11.github.io/posts/20210309_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%A6%82%E8%BF%B0/</link>
    <pubDate>Tue, 09 Mar 2021 14:28:14 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://wtysos11.github.io/posts/20210309_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%A6%82%E8%BF%B0/</guid>
    <description><![CDATA[第一章 计算机网络体系结构 1.1 计算机网络概述 分类 按分布范围可以分为广域网、城域网和局域网 按拓扑结构分类可以分为星形网络、总线形网络、环形网络和网]]></description>
</item><item>
    <title>计算机组成-概述</title>
    <link>http://wtysos11.github.io/posts/20210309_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E6%A6%82%E8%BF%B0/</link>
    <pubDate>Tue, 09 Mar 2021 14:26:14 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://wtysos11.github.io/posts/20210309_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E6%A6%82%E8%BF%B0/</guid>
    <description><![CDATA[第1章 计算机系统概述 冯诺依曼结构：运算器、控制器、存储器、输入设备和输出设备五大部件组成。现代计算机一般把控制器和运算器集成在一个芯片上，合]]></description>
</item><item>
    <title>操作系统-概述</title>
    <link>http://wtysos11.github.io/posts/20210309_%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/</link>
    <pubDate>Tue, 09 Mar 2021 14:24:14 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://wtysos11.github.io/posts/20210309_%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/</guid>
    <description><![CDATA[整理磁盘时发现的408笔记 第一章 操作系统概述 1.1 操作系统的基本概念 操作系统是控制和管理整个计算机系统的硬件和软件资源，并合理地组织调度计算机的]]></description>
</item><item>
    <title>数据结构-概述</title>
    <link>http://wtysos11.github.io/posts/20210309_%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%A6%82%E8%BF%B0/</link>
    <pubDate>Tue, 09 Mar 2021 14:21:14 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://wtysos11.github.io/posts/20210309_%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%A6%82%E8%BF%B0/</guid>
    <description><![CDATA[整理磁盘时发现考研408时自己的笔记 第一章 绪论 1.1 数据结构的基本概念 数据：信息的载体 数据元素：数据的基本单位。一个数据元素可由若干个数据项组成]]></description>
</item><item>
    <title>Dynamic Cloud Resource Allocation Considering Demand Uncertainty</title>
    <link>http://wtysos11.github.io/posts/20210305_dynamic-cloud-resource-allocation-considering-demand-uncertainty/</link>
    <pubDate>Fri, 05 Mar 2021 10:46:04 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://wtysos11.github.io/posts/20210305_dynamic-cloud-resource-allocation-considering-demand-uncertainty/</guid>
    <description><![CDATA[Dynamic Cloud Resource Allocation Considering Demand Uncertainty 2019 TCC,CCF C类 看到C类效果这样心里还是有点底，这个用来PK应该是没问题的 1 本文提出了一种混合方法来为基于云的网络应用分配云资源。结合]]></description>
</item></channel>
</rss>
